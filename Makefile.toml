[config]
default_to_workspace = false
skip_core_tasks = true

[tasks.default]
command = "cargo"
args = ["make", "--list-all-steps"]

[tasks.install-cranelift]
description = "Install the Cranelift toolchain"
toolchain = "nightly"
install_crate = { crate_name = "rustc_codegen_cranelift", rustup_component_name = "rustc-codegen-cranelift-preview" }

[tasks.fmt]
description = "Format the codebase"
toolchain = "nightly"
install_crate = { crate_name = "fmt", rustup_component_name = "rustfmt", binary = "rustfmt", test_arg = "--help" }
command = "cargo"
args = ["fmt"]

[tasks.check-fmt]
description = "Check the codebase formatting"
toolchain = "nightly"
install_crate = { crate_name = "fmt", rustup_component_name = "rustfmt", binary = "rustfmt", test_arg = "--help" }
command = "cargo"
args = ["fmt", "--", "--check"]

[tasks.lint]
description = "Lint the codebase"
toolchain = "nightly"
install_crate = { crate_name = "clippy", rustup_component_name = "clippy", binary = "cargo-clippy", test_arg = "--help" }
dependencies = ["install-cranelift"]
env = { RUSTFLAGS = "-Zcodegen-backend=cranelift" }
command = "cargo"
args = ["clippy", "--all-features", "--", "-D", "warnings", "--no-deps"]

[tasks.check-unused-deps]
description = "Check for unused dependencies"
install_crate = "cargo-machete"
command = "cargo"
args = ["machete"]

[tasks.check]
description = "Run all checks"
# Have to do this here weirdly
toolchain = "nightly"
dependencies = ["check-fmt", "lint", "check-unused-deps"]

[tasks.clean]
description = "Clean the project"
command = "cargo"
args = ["clean"]

[tasks.test]
description = "Run all tests"
toolchain = "nightly"
install_crate = "nextest"
dependencies = ["install-cranelift"]
env = { RUSTFLAGS = "-Zcodegen-backend=cranelift" }
command = "cargo"
args = ["nextest", "run", "--all", "--verbose", "--fail-fast"]

[tasks.snops-dev]
description = "Live reload the Snops server"
toolchain = "nightly"
command = "cargo"
env = { SNOPS_LOG = "trace", RUSTFLAGS = "-Zcodegen-backend=cranelift" }
watch = { watch = ["./crates/snops"] }
args = ["run", "--bin", "snops"]

[tasks.install-rust-src]
description = "Install the Rust source code"
install_crate = { rustup_component_name = "rust-src" }

[tasks.install-upx]
description = "Install UPX. Requires sudo and wget to be installed."
condition = { platforms = ["linux"] }
install_script = '''
if command -v upx > /dev/null 2>&1; then
	echo "UPX is already installed."
	exit 0
fi

wget https://github.com/upx/upx/releases/download/v4.2.3/upx-4.2.3-amd64_linux.tar.xz
tar -xf upx-4.2.3-amd64_linux.tar.xz
cp ./upx-4.2.3-amd64_linux/upx /usr/local/bin/
rm -rf upx-4.2.3-amd64_linux.tar.xz upx-4.2.3-amd64_linux/
'''

[tasks.clean-compressed]
description = "Clean the compressed binaries"
command = "rm"
args = ["-rf", "./target/*-compressed"]

[tasks.build-aot]
description = "Build the AOT binary"
toolchain = "nightly"
dependencies = ["install-rust-src"]
env = { RUSTFLAGS = "-C panic=abort -Zlocation-detail=none" }
command = "cargo"
args = [
	"build",
	"-p",
	"snarkos-aot",
	"-Zbuild-std=std,panic_abort",
	"-Zbuild-std-features=panic_immediate_abort",
	"--profile",
	"release-small",
	"--target",
	"x86_64-unknown-linux-gnu",
]

[tasks.compress-aot]
description = "Compress the AOT binary"
dependencies = ["build-aot"]
command = "upx"
args = [
	"--best",
	"--lzma",
	"-o",
	"./target/snarkos-aot-compressed",
	"./target/x86_64-unknown-linux-gnu/release-small/snarkos-aot",
]

[tasks.build-snops]
description = "Build the Snops server binary"
toolchain = "nightly"
dependencies = ["install-rust-src"]
env = { RUSTFLAGS = "-C panic=abort -Zlocation-detail=none" }
command = "cargo"
args = [
	"build",
	"-p",
	"snops",
	"-Zbuild-std=std,panic_abort",
	"-Zbuild-std-features=panic_immediate_abort",
	"--profile",
	"release",
	"--target",
	"x86_64-unknown-linux-gnu",
]

[tasks.compress-snops]
description = "Compress the Snops server binary"
dependencies = ["build-snops"]
command = "upx"
args = [
	"--best",
	"--lzma",
	"-o",
	"./target/snops-compressed",
	"./target/x86_64-unknown-linux-gnu/release/snops",
]

[tasks.build-snops-agent]
description = "Build the Snops agent binary"
toolchain = "nightly"
dependencies = ["install-rust-src"]
env = { RUSTFLAGS = "-C panic=abort -Zlocation-detail=none" }
command = "cargo"
args = [
	"build",
	"-p",
	"snops-agent",
	"-Zbuild-std=std,panic_abort",
	"-Zbuild-std-features=panic_immediate_abort",
	"--profile",
	"release-small",
	"--target",
	"x86_64-unknown-linux-gnu",
]

[tasks.compress-snops-agent]
description = "Compress the Snops agent binary"
dependencies = ["build-snops-agent"]
command = "upx"
args = [
	"--best",
	"--lzma",
	"-o",
	"./target/snops-agent-compressed",
	"./target/x86_64-unknown-linux-gnu/release-small/snops-agent",
]

[tasks.build-snops-cli]
description = "Build the Snops cli binary"
toolchain = "nightly"
dependencies = ["install-rust-src"]
env = { RUSTFLAGS = "-C panic=abort -Zlocation-detail=none" }
command = "cargo"
args = [
	"build",
	"-p",
	"snops-cli",
	"-Zbuild-std=std,panic_abort",
	"-Zbuild-std-features=panic_immediate_abort",
	"--profile",
	"release",
	"--target",
	"x86_64-unknown-linux-gnu",
]

[tasks.compress-snops-cli]
description = "Compress the Snops cli binary"
dependencies = ["build-snops-cli"]
command = "upx"
args = [
	"--best",
	"--lzma",
	"-o",
	"./target/snops-cli-compressed",
	"./target/x86_64-unknown-linux-gnu/release/snops-cli",
]

[tasks.build]
description = "Build and compress all binaries"
dependencies = [
	"clean-compressed",
	"compress-aot",
	"compress-snops",
	"compress-snops-agent",
	"compress-snops-cli",
]
